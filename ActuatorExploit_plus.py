# -*- coding: utf-8 -*-
import sys                                                                  
import signal
import argparse
import requests
import urllib3
from urllib3.exceptions import InsecureRequestWarning
urllib3.disable_warnings(InsecureRequestWarning)

 
def quit(signum, frame):
    print("")
    print('stop fusion')
    sys.exit()


def Index():
    Banner ='''\033[31;1m

   _____          __                __              ___________              .__         .__  __    __________.__                
  /  _  \   _____/  |_ __ _______ _/  |_  __________\_   _____/__  _________ |  |   ____ |__|/  |_  \______   \  |  __ __  ______
 /  /_\  \_/ ___\   __\  |  \__  \\   __\/  _ \_  __ \    __)_\  \/  /\____ \|  |  /  _ \|  \   __\  |     ___/  | |  |  \/  ___/
/    |    \  \___|  | |  |  // __ \|  | (  <_> )  | \/        \>    < |  |_> >  |_(  <_> )  ||  |    |    |   |  |_|  |  /\___ \ 
\____|__  /\___  >__| |____/(____  /__|  \____/|__| /_______  /__/\_ \|   __/|____/\____/|__||__|    |____|   |____/____//____  >
        \/     \/                \/                         \/      \/|__|                                                    \/ 
                                                       \033[31;0m
                                                       \033[32;1mAuthor: Kagantua\033[0m              
    '''
    print(Banner)


def Check(targetdir):
    print("[+]-----检测未授权漏洞中-----")
    lis = [line.strip() for line in open('./Dic/SpringBoot-Dic', 'r')]
    urls= [line.strip() for line in open(targetdir,'r')]
    for url in urls:
        for i in lis:
            headers = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36 QIHU 360SE'
            }
            try:
                res=requests.get(url=url+i,headers=headers,verify=False,timeout=3)
                #print(res)
            except:
                print("",end="")
            if res.status_code == 200:
                print("\033[31;1m[+]\033[31;0m"+url+i+"可能存在信息泄漏")


# def Exploit(): 

if __name__ == '__main__':
    signal.signal(signal.SIGINT, quit)                                
    signal.signal(signal.SIGTERM, quit)
    
    parser = argparse.ArgumentParser(description="Springboot ActuatorExploit")
    parser.add_argument('-td', '--targetdir', type=str, required=True)
    args = parser.parse_args()

    Index() #打印标签

    Check(args.targetdir)